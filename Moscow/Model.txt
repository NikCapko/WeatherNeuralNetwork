def my_model():
    model = Sequential()
    model.add(Dense(INPUT, input_dim=INPUT, kernel_initializer='normal', activation='relu'))
    
    model.add(Dense(8, activation='sigmoid'))
    model.add(Dense(12, activation='relu'))
    model.add(Dense(16, activation='sigmoid'))
    model.add(Dense(20, activation='relu'))
    model.add(Dense(24, activation='sigmoid'))
    model.add(Dense(32, activation='relu'))
    model.add(Dense(36, activation='sigmoid'))
    model.add(Dense(40, activation='relu'))
    model.add(Dense(44, activation='sigmoid'))
    model.add(Dense(48, activation='relu'))
    model.add(Dense(52, activation='sigmoid'))
    model.add(Dense(56, activation='relu'))
    model.add(Dense(60, activation='sigmoid'))
    model.add(Dense(64, activation='relu'))

    model.add(Dense(OUTPUT, kernel_initializer='normal', activation='sigmoid'))
    model.compile(loss='binary_crossentropy',
                  optimizer='adam', metrics=['accuracy'])
    return model
